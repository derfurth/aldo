<div class="fr-grid-row fr-mt-3w">
  <div class="fr-table fr-col-12 fr-col-lg-9 fr-pr-md-1w">
    <table class="detail-table">
      <caption><h2>Flux de carbone</h2></caption>
      <thead>
        <tr class="expandable-row-header flux-row">
          <th scope="col">Occupation du sol finale</th>
          <th scope="col">Sequestration tCO<sub>2</sub>e&nbsp;/&nbsp;an</th>
          <td scope="col"></td>
          <td scope="col"></td>
        </tr>
      </thead>
      <tbody>
        <% for( let index=0; index < sortedFluxKeys.length; index++ ) { %>
          <% const groundType = sortedFluxKeys[index] %>
          <% const thisFlux = fluxSummary[groundType.stocksId] %>
          <!-- TODO: make row blue if area modified -->
          <tr class="expandable-row flux-row">
            <td onClick='toggleRow(this)'>
              <%= groundType.name %> <%= thisFlux?.hasModifications ? '*' : '' %>
            </td>
            <td onClick='toggleRow(this)' style="text-align: right;">
              <% if (thisFlux) { %>
                <%= formatNumber(thisFlux.totalSequestration) %>
              <% } else { %>
                <i>Pas de données</i>
              <% } %>
            </td>
            <td onClick='toggleRow(this)' style="text-align: center;">
              <% if (!thisFlux || Math.abs(thisFlux.totalSequestration) < 0.5) { %>
                <!-- no change -->
              <% } else if (thisFlux.totalSequestration > 0) { %>
                <!-- colour = 'succès' -->
                <span style="color: #1f8d49;">séquestration</span>
              <% } else { %>
                <!-- rouge marianne -->
                <span style="color: #e1000f;">émission</span>
              <% } %>
            </td>
            <td onClick='toggleRow(this)'>
              <button onClick='toggleRow(this)' type="button">
                <span class="fr-fi-question-line" aria-hidden="true" style="color: #555"></span>
              </button>
            </td>
            <td class='expanded-row-content hide-row'>
              <%
                const hasFluxFromAreaChange = allFlux.some(f => {
                  // the startsWith handles the case of prairies and sols artificiels
                  const relevantFlux = f.to === groundType.stocksId || f.to.startsWith(groundType.stocksId)
                  return relevantFlux && f.value !== 0 && !f.practice
                })
                const hasFluxFromAgriculturalPractices = allFlux.some(f => {
                  const relevantFlux = f.to === groundType.stocksId || f.to.startsWith(groundType.stocksId)
                  return relevantFlux && f.value !== 0 && f.practice
                })
              %>
              <% if (!thisFlux) { %>
                <p>Pas de données.</p>
              <% } else if (Math.abs(thisFlux.totalSequestration) < 0.5) { %>
                <p>Aucun changement du sol enregistré.</p>
              <% } else if (groundType.stocksId === 'produits bois') { %>
                <%- include('fluxCalculations/wood', { woodCalculation }) -%>
              <% } else if (!groundType.children) { %>
                <% if (hasFluxFromAreaChange) { %>
                  <p class="fr-text--sm fr-mb-1w">
                    Les flux annuels liés aux changements d'occupation du sol vers <%= groundType.name.toLowerCase() %>&nbsp;:
                  </p>
                  <%- include('fluxCalculations/simple', { groundType: groundType.stocksId }) -%>
                  <br />
                <% } %>
                <% if (hasFluxFromAgriculturalPractices) { %>
                  <p class="fr-text--sm fr-mb-1w fr-mt-2w">
                    Les flux annuels liés aux pratiques agricoles mises en place il y a moins de 20 ans&nbsp;:
                  </p>
                  <%- include('fluxCalculations/agricultural-practices', { groundType: groundType.stocksId }) -%>
                <% } %>
              <% } else if(groundType.stocksId !== 'forêts') { %>
                <% if (hasFluxFromAreaChange) { %>
                  <% function hasData(child) {
                    return Math.abs(fluxSummary[child]?.totalSequestration) > 0.5
                  }
                  const hasDataForMultipleChildren = groundType.children.filter(child => hasData(child)).length > 1 %>
                  <% if (hasDataForMultipleChildren) { %>
                    <p class="fr-text--sm fr-mb-1w">
                      Les flux annuels liés aux changements d'occupation du sol vers <%= groundType.name.toLowerCase() %> sont séparés par sous-typologie.
                    </p>
                  <% } %>
                  <!-- Prairies, sols artificiels -->
                  <% for (const child of groundType.children) { %>
                    <% if(hasData(child)) { %>
                      <p class="fr-text--sm fr-mb-1w">Vers <%= child %>&nbsp;:</p>
                      <%- include('fluxCalculations/simple', { groundType: child }) -%>
                      <br/>
                    <% } %>
                  <% } %>
                <% } %>
                <% if (hasFluxFromAgriculturalPractices) { %>
                  <p class="fr-text--sm fr-mb-1w">
                    Les flux annuels liés aux pratiques agricoles mises en place depuis moins de 20 ans&nbsp;:
                  </p>
                  <%- include('fluxCalculations/agricultural-practices', { groundType: groundType.stocksId }) -%>
                <% } %>
              <% } else if(groundType.stocksId === 'forêts') { %>
                <% if(hasFluxFromAreaChange) { %>
                  <p class="fr-text--sm fr-mb-1w">
                    Les flux annuels liés aux changements d'occupation du sol vers <%= groundType.name.toLowerCase() %>&nbsp;:
                  </p>
                  <%- include('fluxCalculations/simple', { groundType: groundType.stocksId }) -%>
                <% } else { %>
                  <p class="fr-text--sm fr-mb-1w">
                    Il n'y a aucun changement d'occupation du sol vers <%= groundType.name.toLowerCase() %>.
                  </p>
                <% } %>
                <%- include('fluxCalculations/forest-biomass') -%>
              <% } %>
            </td>
          </tr>
        <% } %>
      </tbody>
    </table>
    <% if (fluxHaveModifications) { %>
      <p class="fr-text--sm fr-mt-1w">* Changement de surface modifiée</p>
    <% } %>
    <% if (Object.keys(agriculturalPracticeDetail).length) { %>
      <p class="fr-text--sm fr-mt-1w">Ces flux comprisent ceux qui sont reliés a vos pratiques agricoles. Modifiez-les dans l'onglet « Pratiques agricoles ».</p>
    <% } else { %>
      <p class="fr-text--sm fr-mt-1w">Mettez à jour vos pratiques agricoles pour voir comment elles influencent les flux dans votre térritoire avec l'onglet « Pratiques agricoles ».</p>
    <% } %>
    <p class="fr-text--sm fr-mt-1w"><a href="https://docs.datagir.ademe.fr/documentation-aldo/flux/occupation-du-sol-et-foret" target="_blank" rel="noopener noreferrer">En savoir plus sur les méthodes de calculs</a></p>
  </div>
  <div class="fr-col-12 fr-col-md-8 fr-col-lg-6 fr-pt-2w">
    <h3>Résultats graphiques</h3>
    <ul class="fr-accordions-group" data-fr-js-accordions-group="true">
      <% for (let keyIdx=0; keyIdx < Object.keys(fluxCharts).length; keyIdx++) { %>
        <li>
          <section class="fr-accordion">
            <h4 class="fr-accordion__title">
              <button type="button" class="fr-accordion__btn" aria-expanded="<%= keyIdx === 0 %>"
                aria-controls="accordion-flux-chart-<%= keyIdx %>">
                <%= fluxCharts[Object.keys(fluxCharts)[keyIdx]].title %>
              </button>
            </h4>
            <div class="fr-collapse" id="accordion-flux-chart-<%= keyIdx %>">
              <canvas id="fluxChart-<%= Object.keys(fluxCharts)[keyIdx] %>" width="400" height="500"></canvas>
            </div>
          </section>
        </li>
        <% } %>
    </ul>
  </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2"></script>
<script>
  Chart.register(ChartDataLabels);
  Chart.defaults.set('plugins.datalabels', {
    anchor: 'center',
    display: 'auto'
  });

  const fluxReservoirCtx = document.getElementById('fluxChart-reservoir');
  const fluxReservoirChartData = JSON.parse(`<%- fluxCharts.reservoir.data %>`);
  new Chart(fluxReservoirCtx, fluxReservoirChartData);

  const fluxGrountCtx = document.getElementById('fluxChart-groundType');
  const fluxGroundChartData = JSON.parse(`<%- fluxCharts.groundType.data %>`);
  new Chart(fluxGrountCtx, fluxGroundChartData);
</script>